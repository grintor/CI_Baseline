name: code testing workflow

on:
  push:
  pull_request:
    branches: [main]

concurrency:
  group: ci-tests-${{github.ref}}-testing
  cancel-in-progress: true

jobs:
  code_testing_job:
    runs-on: ubuntu-latest
    name: code testing job
    steps:
      - name: print context info
        run: |
          echo "github.event_name:" ${{github.event_name}}
          echo "github.event.action:" ${{github.event.action}}
          echo "github.actor:" ${{github.actor}}

      - name: attempt checkout with PAT
        id: checkout_pat
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          token: ${{ secrets.PAT }}

      - name: fallback to checkout with GITHUB_TOKEN
        if: steps.checkout_pat.outcome != 'success'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          #python -m pip install --upgrade pip
          pip install pip-tools
          pip-compile requirements.in -q
          pip install -r requirements.txt
          sudo apt-get update -y
          sudo apt-get install -y aspell

      - name:
          pre-commit initial cleanup
          # this will fix any problems it can which the developer left behind
          # needs to run before pytest because it may break something
        run: |
          pre-commit run --all-files
        continue-on-error: true

      - name: test with pytest
        run: |
          pytest

      - name:
          update shields
          # relies on pytest having run so that the coverage database exists.
        run: |
          python .ci-tools/coverage_shield.py
          python .ci-tools/quality_shield.py

      - name: build docs
        run: |
          rm -rf docs
          sphinx-build -W --keep-going -a -b dirhtml docs-src docs
          touch docs/.nojekyll

      - name:
          pre-commit final cleanup
          # this will fix any formatting problems from output of pytest and .ci-tools/*
          # needs to run after pytest and .ci-tools/* to clean up their output
        run: |
          pre-commit run --all-files
        continue-on-error: true

      - name:
          stage changes
          # this will stage all changes except those in .github/workflows
          # CI cannot edit .github/workflows files, so this is a workaround
          # By doing it this way, we auto-fail badly formatted workflow files
          # This should not affect any developers using the pre-commit hook
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git rm -r --cached .
          git add .
          git reset .github/workflows
          git reset --hard .github/workflows
        continue-on-error: true

      - name:
          final test with pre-commit
          # this will allow the workflow to fail based on pre-commit findings
          # needs to run before git push so we don't push failing code
          # needs to run after git reset --hard above so it will fail on workflow file edits
          # notice this one does not have continue-on-error: true
        run: |
          pre-commit run --all-files

      - name:
          commit changes
          # this will commit all changes except those in .github/workflows
        run: |
          git commit -am "ðŸ¤– Automated CI update"
          git push
        continue-on-error: true
